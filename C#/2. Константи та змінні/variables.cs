using System;
using System.Collections.Generic;

namespace Variables
{
    class Program
    {
        static void Main()
        {
            // Секція: Змінні в C#
            // У C# змінні — це іменовані ділянки пам’яті, які використовуються для зберігання даних певного типу під час виконання програми.
            // Змінні дозволяють зберігати, обробляти та змінювати значення, такі як числа, текст, логічні значення чи складні об’єкти.
            // Використовуються для збереження даних, необхідних для обчислень, управління логікою програми або передачі даних між частинами коду.
            // Змінні в C# є строго типізованими: тип даних потрібно вказати явно (наприклад, int, string) або неявно через var.
            // Ключове слово var дозволяє компілятору визначити тип змінної на основі присвоєного значення під час компіляції.
            // Розмір у пам’яті: залежить від типу даних (наприклад, int — 4 байти, double — 8 байтів, string — залежить від довжини тексту).
            // Область видимості: змінні мають обмежену область видимості (scope), наприклад, локальні змінні доступні лише в межах блоку, де оголошені.

            // Оголошення змінної: Вказується тип даних (або var), ім’я змінної та, за потреби, початкове значення.
            // Застосування: збереження проміжних результатів, введених користувачем даних, конфігураційних параметрів або стану програми.
            // Перевага: змінні забезпечують гнучкість, дозволяють змінювати дані під час виконання, підвищують читабельність коду.
            // Обмеження: змінні повинні бути оголошені перед використанням; var вимагає ініціалізації; неправильний тип даних спричиняє помилки.
            int number = 42; // Приклад: оголошення змінної number типу int зі значенням 42.
                             // Тип int дозволяє зберігати цілі числа в діапазоні від -2,147,483,648 до 2,147,483,647.
                             // Помилка: number = "text"; — не компілюється, оскільки тип int не сумісний зі строкою.
            var count = 10;  // Приклад: використання var для неявного типізування; count має тип int, визначений компілятором.
                             // Var спрощує код, але тип стає відомим лише під час компіляції.

            // Приклади використання:
            double price = 99.99;    // Оголошення змінної price типу double для зберігання дробових чисел (8 байтів).
            var discount = 0.15;     // Змінна discount типу double, визначена через var для знижки у відсотках.
            string name = "Alice";   // Змінна name типу string для зберігання текстових даних (змінний розмір у пам’яті).
            var greeting = "Hello";  // Змінна greeting типу string, визначена через var.
            bool isActive = true;    // Змінна isActive типу bool для логічного значення (true/false, 1 байт).
            var flag = false;        // Використання var для змінної flag типу bool.
            var numbers = new List<int> { 1, 2, 3 }; // Var для складного типу List<int>, ініціалізованого списком.

            // Область видимості та ініціалізація:
            // Локальні змінні: доступні лише в межах блоку, де оголошені, наприклад, у методі Main.
            int localVar = 100; // Локальна змінна, доступна лише в Main.
            // Помилка: Console.WriteLine(globalVar); // globalVar не оголошена в цій області видимості.
            // Змінні var: потребують ініціалізації, щоб компілятор міг визначити тип.
            // Помилка: var x; // Не компілюється, оскільки var вимагає початкового значення.
            // Неініціалізовані змінні: локальні змінні без початкового значення викликають помилку компіляції.
            // int uninitialized; Console.WriteLine(uninitialized); // Помилка: використання неініціалізованої змінної.

            // Помилки:
            // int x; x = "text"; // Помилка: несумісний тип даних (string не може бути присвоєно int).
            // var y; // Помилка: змінна var потребує ініціалізації для визначення типу.
            // y = 10; // Помилка: змінна y не оголошена перед використанням.
            // count = "text"; // Помилка: після визначення count як int, присвоєння string неможливе.
        }
    }
}
// Додаткові зауваження:
// 1. Синтаксис: Змінна оголошується як <тип> <ім’я> = <значення> або var <ім’я> = <значення>.
//    Наприклад: int x = 5; або var y = 5; (y буде int). Тип у var визначається компілятором на основі значення.
// 2. Використання: Змінні необхідні для зберігання даних (наприклад, введення користувача, результати обчислень).
//    Var часто використовується в LINQ-запитах, при роботі з об’єктами або коли тип очевидний із контексту.
//    Наприклад: var query = from n in numbers select n; // query має тип IEnumerable<int>.
// 3. Читабельність: Використовуйте зрозумілі імена змінних, наприклад, userAge замість a.
//    Var рекомендується використовувати, коли тип очевидний, наприклад, var list = new List<int>();.
//    Для складних типів або коли тип неочевидний, краще вказувати явний тип (наприклад, List<int>).
// 4. Практичне використання: Змінні застосовуються в обчисленнях, умовних конструкціях, циклах,
//    передачі даних між методами. Var спрощує код у складних виразах, але може погіршити читабельність, якщо тип неочевидний.
// 5. Обмеження: Змінні мають область видимості (scope), яка обмежує їх доступність.
//    Наприклад, змінна, оголошена в блоці if, недоступна поза ним.
//    Var потребує ініціалізації під час оголошення. Неправильне використання типів,
//    неініціалізовані змінні або спроба змінити тип змінної після оголошення викликають помилки.
// 6. Типи даних: C# підтримує числові типи (int, double, float), текстові (string), логічні (bool),
//    а також складні типи (класи, масиви, списки). Кожен тип має свій розмір і діапазон значень.
// 7. Var і динамічність: Var не є динамічним типом (як dynamic); тип фіксується під час компіляції.
//    Наприклад: var x = 5; x = "text"; // Помилка, оскільки x фіксований як int.
